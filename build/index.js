/*!
 * 
 *   @budajeff/killer-game-logic v1.0.131
 *   https://github.com/budajeff/killer-game-logic
 *
 *   Copyright (c) Jeff Buda (https://github.com/budajeff) and project contributors.
 *
 *   This source code is licensed under the MIT license found in the
 *   LICENSE file in the root directory of this source tree.
 *
 */
!function(e,r){"object"==typeof exports&&"object"==typeof module?module.exports=r():"function"==typeof define&&define.amd?define([],r):"object"==typeof exports?exports.KillerGameLogic=r():e.KillerGameLogic=r()}(self,(function(){return(()=>{"use strict";var e={d:(r,n)=>{for(var t in n)e.o(n,t)&&!e.o(r,t)&&Object.defineProperty(r,t,{enumerable:!0,get:n[t]})},o:(e,r)=>Object.prototype.hasOwnProperty.call(e,r),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},r={};e.r(r),e.d(r,{Card:()=>b,CardSequence:()=>i.CardSequence,GameState:()=>j,Play:()=>m,PlayerStatus:()=>a,Rank:()=>t,Suit:()=>n,cardToString:()=>g,createDeck:()=>F,findOfAKinds:()=>N,findRuns:()=>C,getActivePlayers:()=>w,getCurrentPlayer:()=>k,getNextPlayer:()=>K,getPassedPlayers:()=>P,orderBy:()=>A,transitionState:()=>G});var n,t,o,a,i={};function u(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function c(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?u(Object(n),!0).forEach((function(r){s(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):u(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function s(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function f(e){return function(e){if(Array.isArray(e))return h(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||d(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function l(e,r){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=d(e))||r&&e&&"number"==typeof e.length){n&&(e=n);var t=0,o=function(){};return{s:o,n:function(){return t>=e.length?{done:!0}:{done:!1,value:e[t++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,i=!0,u=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return i=e.done,e},e:function(e){u=!0,a=e},f:function(){try{i||null==n.return||n.return()}finally{if(u)throw a}}}}function d(e,r){if(e){if("string"==typeof e)return h(e,r);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?h(e,r):void 0}}function h(e,r){(null==r||r>e.length)&&(r=e.length);for(var n=0,t=new Array(r);n<r;n++)t[n]=e[n];return t}function y(e,r){for(var n=0;n<r.length;n++){var t=r[n];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}function p(e,r,n){return r&&y(e.prototype,r),n&&y(e,n),e}function v(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}function g(e){return function(e){switch(e){case t.Two:return"2";case t.Ace:return"A";case t.King:return"K";case t.Queen:return"Q";case t.Jack:return"J";case t.Ten:return"10";case t.Nine:return"9";case t.Eight:return"8";case t.Seven:return"7";case t.Six:return"6";case t.Five:return"5";case t.Four:return"4";case t.Three:return"3";default:return"?"}}(e.rank)+function(e){switch(e){case"hearts":return"♥";case"diamonds":return"♦";case"clubs":return"♧";case"spades":return"♠";default:return"?"}}(e.suit)}e.r(i),e.d(i,{Zb:()=>b,D2:()=>j,sh:()=>m,cS:()=>a,yw:()=>t,hE:()=>n,VV:()=>g,tI:()=>F,L:()=>N,AY:()=>C,Pm:()=>w,JC:()=>k,uU:()=>K,eO:()=>P,Xo:()=>A,LG:()=>G}),function(e){e.Hearts="hearts",e.Diamonds="diamonds",e.Clubs="clubs",e.Spades="spades"}(n||(n={})),function(e){e[e.Two=13]="Two",e[e.Ace=12]="Ace",e[e.King=11]="King",e[e.Queen=10]="Queen",e[e.Jack=9]="Jack",e[e.Ten=8]="Ten",e[e.Nine=7]="Nine",e[e.Eight=6]="Eight",e[e.Seven=5]="Seven",e[e.Six=4]="Six",e[e.Five=3]="Five",e[e.Four=2]="Four",e[e.Three=1]="Three"}(t||(t={})),function(e){e.None="none",e.OneOfAKind="one of a kind",e.TwoOfAKind="two of a kind",e.ThreeOfAKind="three of a kind",e.FourOfAKind="four of a kind",e.RunOfThree="run of three",e.RunOfFour="run of four",e.RunOfFive="run of five",e.RunOfSix="run of six",e.RunOfSeven="run of seven",e.RunOfEight="run of eight",e.RunOfNine="run of nine",e.RunOfTen="run of ten",e.RunOfEleven="run of eleven",e.RunOfTwelve="run of twelve",e.RunOfThirteen="run of thirteen",e.RunOfThreePairs="run of three pairs",e.RunOfFourPairs="run of four pairs",e.RunOfFivePairs="run of five pairs",e.RunOfSixPairs="run of six pairs",e.RunOfThreeTriples="run of three triples",e.RunOfFourTriples="run of four triples"}(o||(o={})),function(e){e.InRound="in",e.PassedRound="passed"}(a||(a={}));var m=function e(r){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0;v(this,e),this.player=r,this.cards=n},b=function(){function e(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:t.Ace,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:n.Hearts;v(this,e),this.rank=r,this.suit=o}return p(e,[{key:"toString",value:function(){return"".concat(this.rank," of ").concat(this.suit)}}]),e}(),O=function(){function e(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"player",n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:a.InRound,i=arguments.length>4&&void 0!==arguments[4]&&arguments[4];v(this,e),this.name=r,this.order=n,this.cards=t,this.status=o,this.current=i}return p(e,[{key:"toString",value:function(){var e;return"Player ".concat(this.name," with ").concat(null==this||null===(e=this.cards)||void 0===e?void 0:e.length," cards remaining")}}]),e}();function w(e){return e.players.filter((function(e){return e.status===a.InRound}))}function P(e){return e.players.filter((function(e){return e.status===a.PassedRound}))}function S(e,r){e.players.forEach((function(e){return e.current=!1})),r.current=!0}function k(e){return e.players.filter((function(e){return e.current}))[0]}var j=function e(r,n,t,o){v(this,e),this.players=r,this.discardPile=n,this.message=t,this.error=o};function R(e,r){return e.rank>r.rank?1:e.rank<r.rank?-1:0}function T(e,r){return e.order>r.order?1:e.order<r.order?-1:0}function A(e){var r=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];return function(n,t){return n[e]>t[e]?r?1:-1:n[e]<t[e]?r?-1:1:0}}function E(e,r){if(r.length>4||r.length<2)throw new Error("invalid Player length");!function(e){for(var r,n=e.length;0!==n;){r=Math.floor(Math.random()*n),n--;var t=[e[r],e[n]];e[n]=t[0],e[r]=t[1]}}(e),r.forEach((function(r){return r.cards=e.splice(0,13)}))}function x(e){return Object.keys(e).filter((function(e){return Number.isNaN(+e)}))}function F(){var e,r=[],o=l(x(n));try{for(o.s();!(e=o.n()).done;){var a,i=e.value,u=l(x(t));try{for(u.s();!(a=u.n()).done;){var c=a.value;r.push({suit:n[i],rank:t[c]})}}catch(e){u.e(e)}finally{u.f()}}}catch(e){o.e(e)}finally{o.f()}return r}function I(e){return e.map((function(e){return e.cards})).reduce((function(e,r){return[].concat(f(e),f(r))}))}function K(e,r){var n=f(r).sort(T).indexOf(e);if(-1===n)throw new Error("Player not found");return n===r.length-1?r[0]:r[n+1]}function N(e){for(var r=f(e).sort(R),n=[],t=[n];r.length>0;){var o=r.shift();0===n.length||n[n.length-1].rank===o.rank?n.push(o):(n=[o],t.push(n))}return t}function C(e){var r=f(e).sort(R),n=[],t=[n];return r.forEach((function(e){0===n.length||n[n.length-1].rank+1===e.rank?n.push(e):(t.push(n),n=[e])})),t}function D(e,r){return r.forEach((function(r){var n=e.cards.indexOf(r);if(!(n>-1))throw new Error("Player does not have card ".concat(r));e.cards.splice(n,1)})),r}function G(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:void 0,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0;if(!e){var n=[new O("A",0),new O("B",1),new O("C",2),new O("D",3)],t={players:n,error:"",discardPile:[],message:"New Game! Waiting on ".concat(n[0])};return S(t,t.players[0]),E(F(),t.players),t.players[0].current=!0,t}if(k(e)!==r.player)return c(c({},e),{},{error:"It is not ".concat(r.player.name,"'s turn. It is ").concat(k(e).name,"'s turn.")});if(!r.cards){r.player.status=a.PassedRound;var o=c(c({},e),{},{error:""});return S(o,K(r.player,o.players)),o.message="".concat(r.player.name," passes. Waiting on ").concat(k(o).name),o}if(1===w(e).length&&0===I(e.players).length){var i=c(c({},e),{},{error:"",discardPile:[].concat(f(e.discardPile),[D(r.player,r.cards)]),message:"".concat(r.player.name," won!")});return i}if(1===w(e).length){var u=c(c({},e),{},{error:"",discardPile:[].concat(f(e.discardPile),[D(r.player,r.cards)])});return u.message="".concat(r.player.name," won round. Waiting on ").concat(k(u).name," to start new round."),u}var s=c(c({},e),{},{error:"",discardPile:[].concat(f(e.discardPile),[D(r.player,r.cards)])});return S(s,K(r.player,e.players)),s.message="".concat(k(e)," played. Waiting on ").concat(k(s)),s}return r})()}));
//# sourceMappingURL=index.js.map